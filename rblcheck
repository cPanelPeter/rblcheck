#!/usr/local/cpanel/3rdparty/bin/perl
# SCRIPT: rblcheck
# AUTHOR: Peter Elsner <peter.elsner@cpanel.net>
# PURPOSE: Check an IP address against various RBL's (Realtime Blackhole Lists)
# CREATED 8/9/2015
#

use strict;
my $version = "2.0.14";
use Socket;
use Getopt::Long;
use Cpanel::Config::LoadWwwAcctConf ();
use Cpanel::SafeRun::Timed();
use Data::Validate::IP;
use Net::IP;
use Time::Piece;
use Time::Seconds;
use Term::ANSIColor qw(:constants);
$Term::ANSIColor::AUTORESET = 1;
$| = 1;

my $allrbls; 
my $mainip;
my $allips; 
my $email; 
my $checkip; 
my $listips;
my $listrbls;
my $listedonly;
my $help;
my $ENTEREDIP;
my $ipaddrline;
my $ipaddr;
my $ipalias;
my @ALL;
my $tocheck;
my @rblnames;
my $rbl;

# Check for NAT configuration
my $HASNAT=0;
$HASNAT=&check_for_nat();

# Get servers_mainip from /etc/wwwacct.conf file.
my $wwwacct = Cpanel::Config::LoadWwwAcctConf::loadwwwacctconf();
my $servers_mainip = $wwwacct->{'ADDR'};
my $cpnatline;
my $PrivateIP;
my $PublicIP;
my @IPALIASES;
my @MAIL2ROOT;

if ($HASNAT) { 
    open(CPNAT,"/var/cpanel/cpnat");
    my @CPNATDATA=<CPNAT>;
    close(CPNAT);
    foreach $cpnatline(@CPNATDATA) { 
        chomp($cpnatline);
        ($PrivateIP,$PublicIP)=(split(/\s+/,$cpnatline));
        if ($PrivateIP eq $servers_mainip) { 
            chomp($PrivateIP);
            chomp($PublicIP);
            $servers_mainip=$PublicIP;
            next;
        }
        push(@IPALIASES,$PublicIP);
    }
}
else {
   open(IPS,"/etc/ips");
   my @EXTRAIPS=<IPS>;
   close(IPS);
   my $extraIP;
   foreach $extraIP (@EXTRAIPS) {
      ($PublicIP)=(split(/:/,$extraIP))[0];
      push(@IPALIASES,$PublicIP);
   }
}

GetOptions(
    'mainip' => \$mainip,
    'allips' => \$allips,
    'listips' => \$listips,
    'listrbls' => \$listrbls,
    'allrbls' => \$allrbls,
    'email' => \$email,
    'listedonly' => \$listedonly,
    'checkip=s' => \$checkip,
    'rbl=s@' => \@rblnames,
    'help' => \$help,
);

my @RBLS = qx[ curl -s https://raw.githubusercontent.com/cPanelPeter/rblcheck/master/shortlist.txt ];
if ($allrbls) { 
    @RBLS = qx[ curl -s https://raw.githubusercontent.com/cPanelPeter/rblcheck/master/rbllist.txt ];
}
my $totrbls=@RBLS;

if (@rblnames) { 
    my @rblnames = split(/,/,join(',',@rblnames));	
    my $inselected;
    my $inall;
    my @selected;
    foreach $inselected(@rblnames) { 
        chomp($inselected);
        foreach $inall(@RBLS) { 
            chomp($inall);
            if ($inselected eq $inall) { 
                push(@selected,$inselected);
            }
        }
    }
    @RBLS = sort(@selected);
    $totrbls=@RBLS;
}

if ($mainip) { 
    checkit($servers_mainip);
    exit;
}

if ($checkip) { 
    $tocheck=$checkip;
    chomp($tocheck);
    checkit($tocheck);
    exit;
}

if ($allips) { 
    @ALL=@IPALIASES;
    push(@ALL,$servers_mainip);
    foreach $tocheck(@ALL) { 
        chomp($tocheck);
        checkit($tocheck);
    }
    exit;
}

if ($listips) { 
    print "Main IP: $servers_mainip\n";
    foreach $ipalias(@IPALIASES) { 
        print "IP Alias: $ipalias\n";
    }
    exit;
}

if ($listrbls) { 
    foreach $rbl(@RBLS) { 
        chomp($rbl);
        print $rbl . "\n";
    }
    exit;
}

&help;

exit;

sub checkit() { 
    $ENTEREDIP=shift;
    my $start_time = Time::Piece->new;
    print "Scan started on $start_time\n";
    print "========================================================\n";
    print "Checking IP $ENTEREDIP\n\n" unless($ENTEREDIP eq "");
    my $NUMLISTED=0;
    my $LOOKUPHOST;
    my $IS_IP_VALID = is_ip($ENTEREDIP);
    if (!($IS_IP_VALID)) {
        print RED "FATAL - invalid entry \"$ENTEREDIP\"\n";
        exit;
    }
    if ( $ENTEREDIP =~ /:/ and $ENTEREDIP !~ /\./ ) {
        # IPV6
        my $EXPANDEDIP = new Net::IP ( $ENTEREDIP );
        $LOOKUPHOST = join '.', reverse ( split '', $EXPANDEDIP->ip() );
        $LOOKUPHOST =~ s/\.:\././g;
    }
    elsif ( $ENTEREDIP =~ /\./ and $ENTEREDIP !~ /:/ ) {
        # IPV4 
        $LOOKUPHOST = join '.', reverse ( split /\./, $ENTEREDIP );
    }
    my $NUMTIMEDOUT=0;
    foreach my $BLACKLIST (@RBLS) {
        chomp($BLACKLIST);
        print YELLOW . $BLACKLIST . WHITE . ": " unless($listedonly);
        my $lookup = "$LOOKUPHOST.$BLACKLIST";
        my $RESULT;
        eval {
            local $SIG{ALRM} = sub { die "alarm\n" }; # NB: \n required
            alarm 3;
            $RESULT = gethostbyname( $lookup );
            alarm 0;
        };
        if ( $@ ) {
            print CYAN "[TIMED OUT]\n" unless($listedonly);
            $NUMTIMEDOUT++;
            next;
        }
        if ( ! defined $RESULT ) {
            print GREEN "[OK]\n" unless($listedonly);
            next;
        }
        #my $A=Cpanel::SafeRun::Timed::timedsaferun( 1, 'dig', $lookup, 'A', '+short' );
        my $A=Cpanel::SafeRun::Timed::timedsaferun( 0.25, 'dig', $lookup, 'A', '+short' );
        chomp($A);
        if ( $A eq "127.255.255.254" ) {
            print GREEN "[OK]\n" unless($listedonly);
            next;
        }
        if ( $listedonly ) {
            print YELLOW . $BLACKLIST . WHITE . ": " . RED "[LISTED] ($A)\n";;
        }
        else {
            print RED "[LISTED] ($A)\n";;
        }
        push(@MAIL2ROOT, $BLACKLIST . "- LISTED (" . $RESULT . ")\n===========================\n");
        $NUMLISTED++;
    }

    print "\n";
    print "Checked $totrbls Realtime Blackhole Lists (RBL's) & found $ENTEREDIP listed in $NUMLISTED of them.\n";
    my $end_time = Time::Piece->new;
    print "Scan completed on $end_time\n";
    my $scantimediff = ( $end_time - $start_time );
    my $scanTotTime  = $scantimediff->pretty;
    $scanTotTime = $scanTotTime . "\n";
    print "Elapsed Time: $scanTotTime\n";
    if ($NUMLISTED > 0 and $email) { 
        my $SENDMAIL = "/usr/sbin/sendmail";
        open(MAIL, "|$SENDMAIL -ti");
        print MAIL "To: root\n";
        print MAIL "From: root\n";
        print MAIL "Subject: rblcheck found $ENTEREDIP listed in $NUMLISTED RBL's\n\n";
        print MAIL "@MAIL2ROOT";
        close(MAIL);
    }
}

sub help { 
    print "rblcheck\n";
    print "   --mainip checks the main IP address.\n";
    print "   --allips checks all IP addresses on the server.\n";
    print "   --listips lists all IP addresses on the server.\n";
    print "   --allrbls uses all known RBL's (takes longer). Default: list of more common RBL's\n";
    print "   --listrbls lists all RBL's that can be checked.\n";
    print "   --rbl [RBL NAME] check only the RBL selected. Can have multiple --rbl values.\n";
    print "   --listedonly only displays information if an IP address is listed in an RBL.\n";
    print "   --checkip [IP ADDRESS] - checks an IP address not associated with this server.\n";
    print "   --email sends email to root user if an IP is listed.\n";
    print "   --help (you're looking at it!)\n";
}

sub check_for_nat() {
    return if (!(-e("/var/cpanel/cpnat")));
    return 1;
}
