#!/usr/local/cpanel/3rdparty/bin/perl
# SCRIPT: rblcheck
# AUTHOR: Peter Elsner <peter.elsner@cpanel.net>
# PURPOSE: Check an IP address against various RBL's (Realtime Blackhole Lists)
# CREATED 8/9/2015
#

use strict;
my $version = "2.0.15";
use Socket;
use Getopt::Long;
#use Cpanel::Config::LoadWwwAcctConf ();
use Cpanel::SafeRun::Timed();
use Data::Validate::IP;
use Net::IP;
use Net::DNS;
use Time::Piece;
use Time::Seconds;
use Cpanel::JSON ();
use JSON::MaybeXS qw(encode_json decode_json);
use Text::Tabs;
$tabstop = 4;
use Term::ANSIColor qw(:constants);
$Term::ANSIColor::AUTORESET = 1;
$| = 1;

my $allrbls; 
my $allips; 
my $email; 
my $checkip; 
my $listips;
my $listrbls;
my $listedonly;
my $help;
my @rblnames;

# Get servers_mainip from /etc/wwwacct.conf file.
my $servers_mainip = get_mainip();
my $cpnatline;
my $PrivateIP;
my $PublicIP;
my @MAIL2ROOT;

GetOptions(
    'allips' => \$allips,
    'listips' => \$listips,
    'listrbls' => \$listrbls,
    'allrbls' => \$allrbls,
    'email' => \$email,
    'listedonly' => \$listedonly,
    'checkip=s' => \$checkip,
    'rbl=s@' => \@rblnames,
    'help' => \$help,
);

my @RBLS = qx[ curl -s https://raw.githubusercontent.com/cPanelPeter/rblcheck/master/shortlist.txt ];
if ($allrbls) { 
    @RBLS = qx[ curl -s https://raw.githubusercontent.com/cPanelPeter/rblcheck/master/rbllist.txt ];
}
my $totrbls=@RBLS;

if (@rblnames) { 
    my @rblnames = split(/,/,join(',',@rblnames));	
    my $inselected;
    my $inall;
    my @selected;
    foreach $inselected(@rblnames) { 
        chomp($inselected);
        foreach $inall(@RBLS) { 
            chomp($inall);
            if ($inselected eq $inall) { 
                push(@selected,$inselected);
            }
        }
    }
    @RBLS = sort(@selected);
    $totrbls=@RBLS;
}


if ($checkip) { 
    my $tocheck=$checkip;
    chomp($tocheck);
    checkit($tocheck);
    exit;
}

if ($allips) { 
    my $getallipsJSON = get_whmapi1( 'listips' );
    for my $getallips ( @{ $getallipsJSON->{data}->{ip} } ) {
        checkit($getallips->{public_ip});
    }
    exit;
}

if ($listips) {
    my $getallipsJSON = get_whmapi1( 'listips' );
    for my $getallips ( @{ $getallipsJSON->{data}->{ip} } ) {
        if ( $getallips->{mainaddr} ) {
            print "Main IP: $getallips->{public_ip}\n";
        }
        else {
            print "IP Alias: $getallips->{public_ip}\n";
        }
    }
    exit;
}

if ($listrbls) { 
    foreach my $rbl(@RBLS) { 
        chomp($rbl);
        print $rbl . "\n";
    }
    exit;
}

if ( $help ) {
    help();
    exit;
}

checkit($servers_mainip);
exit;

sub checkit() { 
    my $ENTEREDIP=shift;
    my $start_time = Time::Piece->new;
    print "Scan started on $start_time\n";
    print "========================================================\n";
    print "Checking IP $ENTEREDIP\n\n" unless($ENTEREDIP eq "");
    my $NUMLISTED=0;
    my $LOOKUPHOST;
    my $IS_IP_VALID = is_ip($ENTEREDIP);
    if (!($IS_IP_VALID)) {
        print RED "FATAL - invalid entry \"$ENTEREDIP\"\n";
        exit;
    }
    if ( $ENTEREDIP =~ /:/ and $ENTEREDIP !~ /\./ ) {
        # IPV6
        my $EXPANDEDIP = new Net::IP ( $ENTEREDIP );
        $LOOKUPHOST = join '.', reverse ( split '', $EXPANDEDIP->ip() );
        $LOOKUPHOST =~ s/\.:\././g;
    }
    elsif ( $ENTEREDIP =~ /\./ and $ENTEREDIP !~ /:/ ) {
        # IPV4 
        $LOOKUPHOST = join '.', reverse ( split /\./, $ENTEREDIP );
    }
    my $NUMTIMEDOUT=0;
    foreach my $rbl(@RBLS) {
        chomp( $rbl );
        my $lookup = $LOOKUPHOST . "." . $rbl;
        my $res = Net::DNS::Resolver->new;
        # If you want to add a timeout check, you can uncomment the two lines below, but I have found that it still moves pretty quickly
        # without these!
        #$res->udp_timeout(10);
        #$res->tcp_timeout(20);
        my $reply = $res->search( $lookup, "A");
        if ( ! $listedonly ) {
            if ( ! $reply ) {
                print WHITE $rbl . ": " . GREEN "[OK]\n";
                next;
            }
        }
        next unless( $reply );
        foreach my $rr ($reply->answer) {
            chomp($rr);
            next unless( $rr->type eq "A" );
            if ( $rr->address =~ m{127.255.255.254} ) {
                print WHITE $rbl . ": " . GREEN "[OK]\n" unless( $listedonly );
                next;
            }
            if ( $rr->address ) {
                print WHITE $rbl . ": " . RED "[LISTED] " . " " . $rr->address, "\n";
                my $txtreply = Cpanel::SafeRun::Timed::timedsaferun( 4, 'dig', '+short', 'TXT', $lookup );
                chomp($txtreply);
                print MAGENTA expand( "\t\\_Reason: " . $txtreply . "\n" ) unless( $txtreply eq "" );
                push(@MAIL2ROOT, $rbl . "- LISTED (" . $rr->address . ")\n===========================\n");
                $NUMLISTED++;
                next;
            }
        }
    }

    print "\n";
    print "Checked $totrbls Realtime Blackhole Lists (RBL's) & found $ENTEREDIP listed in $NUMLISTED of them.\n";
    print $NUMTIMEDOUT . " RBL's timed out within 1 to 2 seconds.\n" if ( $NUMTIMEDOUT > 0 );
    my $end_time = Time::Piece->new;
    print "Scan completed on $end_time\n";
    my $scantimediff = ( $end_time - $start_time );
    my $scanTotTime  = $scantimediff->pretty;
    $scanTotTime = $scanTotTime . "\n";
    print "Elapsed Time: $scanTotTime\n";
    if ($NUMLISTED > 0 and $email) { 
        my $SENDMAIL = "/usr/sbin/sendmail";
        open(MAIL, "|$SENDMAIL -ti");
        print MAIL "To: root\n";
        print MAIL "From: root\n";
        print MAIL "Subject: rblcheck found $ENTEREDIP listed in $NUMLISTED RBL's\n\n";
        print MAIL "@MAIL2ROOT";
        close(MAIL);
    }
}

sub help { 
    print "rblcheck\n";
    print "   --allips checks all IP addresses on the server.\n";
    print "   --listips lists all IP addresses on the server.\n";
    print "   --allrbls uses all known RBL's (takes longer). Default: list of more common RBL's\n";
    print "   --listrbls lists the shortlist of rbls. Pass --allrbls to also list all RBL's that can be checked.\n";
    print "   --rbl [RBL NAME] check only the RBL selected. Can have multiple --rbl values.\n";
    print "   --listedonly only displays information if an IP address is listed in an RBL.\n";
    print "   --checkip [IP ADDRESS] - checks an IP address not associated with this server.\n";
    print "   --email sends email to root user if an IP is listed.\n";
    print "   --help (you're looking at it!)\n";
}

sub check_for_nat() {
    return 1 if (-e("/var/cpanel/cpnat"));
    return 0;
}

sub get_json_from_command {
    my @cmd = @_;
    return Cpanel::JSON::Load(
        Cpanel::SafeRun::Timed::timedsaferun( 30, @cmd ) );
}

sub get_whmapi1 {
    return get_json_from_command( 'whmapi1', '--output=json', @_ );
}

sub get_mainip {
    my $getallipsJSON = get_whmapi1( 'listips' );
    for my $getallips ( @{ $getallipsJSON->{data}->{ip} } ) {
        if ( $getallips->{mainaddr} ) {
            return $getallips->{public_ip};
        }
    }
}

